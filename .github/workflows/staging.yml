name: Elixir Staging

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    name: Staging environment and deployment
    runs-on: ubuntu-latest
    env:
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.10.3' # Define the elixir version [required]
        otp-version: '22.3' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Capture current and previous commit mix.exs version
      run: |
        echo "UPGRADE_VERSION=$(grep -Eo 'version: "[0-9].*' mix.exs | sed 's/[version: \",|[:space:]]//g')" >> $GITHUB_ENV
        git checkout HEAD~1 --quiet
        echo "DEPLOYED_VERSION=$(grep -Eo 'version: "[0-9].*' mix.exs | sed 's/[version: \",|[:space:]]//g')" >> $GITHUB_ENV
    - name: Check the mix.exs version was updated
      if: env.DEPLOYED_VERSION == env.UPGRADE_VERSION
      run: |
        echo "ATTENTION: Both commit versions are equal, you must DELETE this commit and update the mix.exs version"
        exit 1
    - name: Release current full deployed package
      run: |
        make release
    - name: Release upgrade package to the new version
      run: |
        git checkout main
        make upgrade
    - name: Upload to AWS S3 the current package
      uses: qoqa/action-s3-cp@v1.1
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'sa-east-1'
        AWS_S3_PATH: '/releases/${{ env.DEPLOYED_VERSION }}/'
        FILE: '_build/prod/rel/calori_app/releases/${{ env.DEPLOYED_VERSION }}/calori_app.tar.gz'
    - name: Upload to AWS S3 the upgrade package
      uses: qoqa/action-s3-cp@v1.1
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'sa-east-1'
        AWS_S3_PATH: '/upgrades/${{ env.UPGRADE_VERSION }}/'
        FILE: '_build/prod/rel/calori_app/releases/${{ env.UPGRADE_VERSION }}/calori_app.tar.gz'

